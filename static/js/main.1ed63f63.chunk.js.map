{"version":3,"sources":["components/Navbar.tsx","components/ToDoForm.tsx","components/ToDoList.tsx","pages/todosPage.tsx","pages/aboutPage.tsx","App.tsx","index.tsx"],"names":["Navbar","style","paddingLeft","paddingRight","className","href","to","ToDoForm","onAdd","ref","useRef","marginTop","onKeyPress","event","key","current","value","type","id","placeholder","htmlFor","ToDoList","todos","onToggle","onRemove","length","map","todo","onClick","bind","completed","checked","onChange","title","stopPropagation","removeHandler","TodosPage","useState","setTodos","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","AboutPage","history","useHistory","push","App","Fragment","component","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGaA,EAAmB,WAC5B,OACI,6BACA,yBAAKC,MAAO,CAACC,YAAa,OAAQC,aAAc,QAASC,UAAU,+BACjE,uBAAGC,KAAK,IAAID,UAAU,cAAtB,oBACA,wBAAIA,UAAU,8BACZ,4BAAI,kBAAC,IAAD,CAASE,GAAG,KAAZ,4DACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,qE,+BCHHC,EAAqC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAE3CC,EAAMC,iBAAyB,MASrC,OACI,yBAAKN,UAAU,cAAcH,MAAO,CAChCU,UAAW,SAEX,2BACIF,IAAKA,EACLG,WAbY,SAACC,GACH,UAAdA,EAAMC,MACNN,EAAMC,EAAIM,QAASC,OACnBP,EAAIM,QAASC,MAAQ,KAWjBC,KAAK,OACLC,GAAG,QACHC,YAAY,4HAChB,2BAAOC,QAAQ,QAAQhB,UAAU,UAAjC,0HCjBCiB,EAAoC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAOjE,OACI,4BACsB,IAAjBF,EAAMG,OACH,uBAAGrB,UAAU,eAAb,gGACAkB,EAAMI,KAAI,SAAAC,GACV,OACI,wBACIC,QAASL,EAASM,KAAK,KAAMF,EAAKT,IAClCJ,IAAKa,EAAKT,GACVd,UAAWuB,EAAKG,UACd,iBACI,QACN,2BAAOV,QAAQ,IACX,2BACIH,KAAK,WACLc,QAASJ,EAAKG,UACdE,SAAUT,EAASM,KAAK,KAAMF,EAAKT,MAEvC,8BAAOS,EAAKM,OACZ,uBACI7B,UAAU,0BACVwB,QAAS,SAAAf,GAAK,OA1BpB,SAACA,EAAyBK,GAC5CL,EAAMqB,kBACNV,EAASN,GAwBiCiB,CAActB,EAAOc,EAAKT,MAFhD,iBC9BfkB,EAAsB,WAAO,IAAD,EAGrBC,mBAAsB,IAHD,mBAE9Bf,EAF8B,KAGjCgB,EAHiC,KAKrCC,qBAAU,WACN,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MACzDN,EAASE,KACV,IAEHD,qBAAU,WACNI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUxB,MAC9C,CAACA,IAkCJ,OACI,yBAAKlB,UAAU,aACX,kBAAC,EAAD,CAAUI,MAlCC,SAACyB,GAChB,IAAMc,EAAkB,CACpB7B,GAAI8B,KAAKC,MACThB,MAAOA,EACPH,WAAW,GAEfQ,GAAS,SAAAY,GAAI,OACTH,GADS,mBACGG,UA4BZ,kBAAC,EAAD,CAAU5B,MAAOA,EAAOE,SAXV,SAACN,GACEiC,QAAQ,yNAEzBb,GAAS,SAAAY,GAAI,OAAIA,EAAKE,QAAO,SAAAzB,GAAI,OAAIA,EAAKT,KAAOA,SAQAK,SAxBnC,SAACL,GACnBoB,GAAS,SAAAY,GAAI,OAAIA,EAAKxB,KAAI,SAAAC,GAEtB,OAAIA,EAAKT,KAAOA,EACL,2BACAS,GADP,IAEIG,WAAYH,EAAKG,YAGlBH,aCrCN0B,EAAsB,WAC/B,IAAMC,EAAUC,cAChB,OACI,yBAAKnD,UAAU,aACX,wBAAIA,UAAU,UAAd,eACA,4BAAQwB,QAAS,WAAO0B,EAAQE,KAAK,MAAOpD,UAAU,OAAtD,sFCaGqD,G,MAfO,WACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,UAAWvB,EAAWwB,KAAK,IAAIC,OAAK,IAC3C,kBAAC,IAAD,CAAOF,UAAWN,EAAWO,KAAK,gBCV9CE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1ed63f63.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Navbar: React.FC = () => {\r\n    return (\r\n        <nav>\r\n        <div style={{paddingLeft: '3rem', paddingRight: '3rem'}} className=\"nav-wrapper purple darken-1\">\r\n          <a href=\"#\" className=\"brand-logo\">React+TypeScript</a>\r\n          <ul className=\"right hide-on-med-and-down\">\r\n            <li><NavLink to=\"/\">Список дел</NavLink></li>\r\n            <li><NavLink to=\"/about\">Информация</NavLink></li>\r\n          </ul>\r\n        </div>\r\n        </nav>\r\n    )\r\n}","import React, {useState, useRef} from 'react';\r\n\r\ninterface ToDOFormProps {\r\n    onAdd(title: string): void\r\n \r\n  }\r\n\r\nexport const ToDoForm : React.FC<ToDOFormProps> = ({ onAdd }) => { \r\n\r\n    const ref = useRef<HTMLInputElement>(null);\r\n\r\n    const keyPressHandler = (event: React.KeyboardEvent) => {\r\n        if (event.key === 'Enter') {      \r\n            onAdd(ref.current!.value);\r\n            ref.current!.value = '';            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='input-field' style={{\r\n            marginTop: '5rem'\r\n        }}>\r\n            <input\r\n                ref={ref}\r\n                onKeyPress={keyPressHandler}            \r\n                type=\"text\"\r\n                id='title'\r\n                placeholder='Введите название дела...'/>\r\n            <label htmlFor=\"title\" className='active'>Введите название дела</label>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {IToDo} from './interfaces';\r\n\r\ntype ToDoListProps = {\r\n    todos: IToDo[]\r\n    onToggle: (id: number) => void\r\n    onRemove: (id: number) => void\r\n}\r\n\r\n\r\n\r\nexport const ToDoList: React.FC<ToDoListProps> = ({ todos, onToggle, onRemove }) => {\r\n    \r\n    const removeHandler = (event: React.MouseEvent, id: number) => {\r\n        event.stopPropagation();\r\n        onRemove(id);\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {todos.length === 0 ?\r\n                <p className='temple_text'>Никаких задач нет</p> :\r\n                todos.map(todo => {\r\n                return (\r\n                    <li\r\n                        onClick={onToggle.bind(null, todo.id)}\r\n                        key={todo.id}\r\n                        className={todo.completed\r\n                        ? 'todo completed'\r\n                            : 'todo'}>\r\n                        <label htmlFor=\"\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={todo.completed}\r\n                                onChange={onToggle.bind(null, todo.id)}\r\n                            />\r\n                            <span>{todo.title}</span>\r\n                            <i\r\n                                className='material-icons red-text'\r\n                                onClick={event => removeHandler(event, todo.id)}>delete</i>\r\n                        </label>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {ToDoForm} from '../components/ToDoForm';\r\nimport {ToDoList} from '../components/ToDoList';\r\nimport { IToDo } from '../components/interfaces';\r\n\r\ndeclare var confirm: (quest: string) => boolean;\r\n\r\nexport const TodosPage: React.FC = () => {\r\n    \r\n    const [todos,\r\n        setTodos] = useState < IToDo[] > ([]);\r\n    \r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('todos') || '[]')as IToDo[];\r\n        setTodos(data)\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n    \r\n    const addHandler = (title : string) => {\r\n        const newTodo : IToDo = {\r\n            id: Date.now(),\r\n            title: title,\r\n            completed: false\r\n        };\r\n        setTodos(prev => [\r\n            newTodo, ...prev\r\n        ])\r\n    }\r\n    \r\n    const toggleHandler = (id : number) => {\r\n        setTodos(prev => prev.map(todo => {\r\n    \r\n            if (todo.id === id) {\r\n                return {\r\n                    ...todo,\r\n                    completed: !todo.completed\r\n                }\r\n            }\r\n            return todo\r\n        }))\r\n    }\r\n    \r\n    const removeHandler = (id : number) => {\r\n        const shouldRemove = confirm('Вы уверены, что хотите удалить эту задачу?');\r\n        if (shouldRemove) {\r\n            setTodos(prev => prev.filter(todo => todo.id !== id))\r\n        }\r\n    \r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <ToDoForm onAdd={addHandler}/>\r\n            <ToDoList todos={todos} onRemove={removeHandler} onToggle={toggleHandler}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const AboutPage: React.FC = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='center'>Anton Kurdo</h1>\r\n            <button onClick={() => {history.push('/')}} className='btn'>Обратно к делам</button>\r\n        </div>\r\n        \r\n    )\r\n};","import React from 'react';\nimport { Navbar } from './components/Navbar';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { TodosPage } from './pages/todosPage';\nimport { AboutPage } from './pages/aboutPage';\nimport './css/app.css';\n\nconst App: React.FC = () => { \n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Navbar />\n          <Switch>\n            <Route component={TodosPage} path='/' exact />\n            <Route component={AboutPage} path='/about' />          \n          </Switch>           \n        </React.Fragment>    \n    </BrowserRouter>\n      \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}